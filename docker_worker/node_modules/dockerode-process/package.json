{
  "name": "dockerode-process",
  "version": "0.1.0",
  "description": "ChildProcess like interface for docker containers",
  "main": "docker_process.js",
  "scripts": {
    "test": "mocha *_test.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/lightsofapollo/dockerode-process.git"
  },
  "keywords": [
    "dockerode",
    "docker",
    "child",
    "process",
    "container"
  ],
  "author": {
    "name": "James Lal [:lightsofapollo]"
  },
  "license": "Apache2",
  "bugs": {
    "url": "https://github.com/lightsofapollo/dockerode-process/issues"
  },
  "homepage": "https://github.com/lightsofapollo/dockerode-process",
  "dependencies": {
    "dockerode-promise": "0.0.1",
    "promise": "~3.2.0"
  },
  "devDependencies": {
    "mocha": "~1.17.1",
    "dockerode-options": "~0.1.0",
    "dockerode-promise": "0.0.1",
    "mocha-as-promised": "~2.0.0"
  },
  "readme": "\nChildProcess like interface for docker containers.\n\n## API\n\n### Class\n\nRoot module exported from `require('docker-process')`.\n\n```js\nvar DockerProcess = require('docker');\nvar dockerProc = new DockerProcess(\n  // dockerode-promise instance\n  docker,\n  {\n    // http://docs.docker.io/en/latest/api/docker_remote_api_v1.8/#create-a-container\n    create: {},\n\n    // http://docs.docker.io/en/latest/api/docker_remote_api_v1.8/#start-a-container\n    start: {}\n  }\n);\n```\n\n### event: `exit`\n\nEmitted when docker container stops\n\n### event: `close`\n\nIdentical to `exit`\n\n### `dockerProc.stdout`\n\nReadable stream for stdout.\n\n### `dockerProc.stderr`\n\nReadable stream for stderr.\n\n### `dockerProc.id`\n\nContainer id populated during run.\n\n### `dockerProc.exitCode`\n\nExit code populated after run.\n\n### `dockerProc.run([options])`\n\nPull the image from the docker index then create then start the container and return a promise for its exit status.\n\nOptions:\n  - (Boolean) `pull=true` when false assume the image is cached.\n\n```js\ndockerProc.run().then(\n  function(code) {\n  }\n)\n```\n\n### `dockerProc.remove()`\n\nRemove the docker container.\n\n## Example Usage\n\n```js\nvar DockerProcess = require('docker-process');\nvar dockerProc = new DockerProcess(\n  // dockerode-promise instance\n  docker,\n  {\n    // http://docs.docker.io/en/latest/api/docker_remote_api_v1.8/#create-a-container\n    create: {\n      Image: 'ubuntu',\n      Cmd: ['/bin/bash', '-c', 'echo \"xfoo\"']\n    },\n\n    // http://docs.docker.io/en/latest/api/docker_remote_api_v1.8/#start-a-container\n    start: {}\n  }\n);\n\ndockerProc.run();\ndockerProc.stdout.pipe(process.stdout);\ndockerProc.once('exit', function(code) {\n  process.exit(code);  \n})\n```\n",
  "readmeFilename": "README.md",
  "_id": "dockerode-process@0.1.0",
  "dist": {
    "shasum": "753b9326d4d545f0b03651c36c45573b81b1b4a8"
  },
  "_from": "dockerode-process@0.1.0",
  "_resolved": "https://registry.npmjs.org/dockerode-process/-/dockerode-process-0.1.0.tgz"
}
